@Service
public class SimulacionService {

    @Autowired
    private SimulacionRepository repo;

    public Simulacion guardarSimulacion(Simulacion s) {
        double r;
        int n = s.getPeriodosPorAño();
        
        // Asignar tasa de interés según n
        switch (n) {
            case 2: r = 0.05; break; // semestral
            case 4: r = 0.07; break; // trimestral
            case 12: r = 0.11; break; // mensual
            default: throw new IllegalArgumentException("Capitalización no válida");
        }
        
        s.setTasaInteres(r);

        double A = s.getCapitalInicial() * Math.pow(1 + (r / n), n * s.getTiempoAnios());
        double interesGanado = A - s.getCapitalInicial();

        s.setMontoFinal(A);
        s.setInteresGanado(interesGanado);

        // Asignar categoría
        double capital = s.getCapitalInicial();
        if (n == 12) {
            if (capital > 1000) s.setCategoria("Categoría 1");
            else if (capital >= 501) s.setCategoria("Categoría 2");
            else s.setCategoria("Categoría 3");
        } else {
            s.setCategoria("No aplica");
        }

        return repo.save(s);
    }

    public List<Simulacion> obtenerSimulaciones() {
        return repo.findAll();
    }
}
